Installing iotPOS on the Raspberry Pi

To compile and install:

The first step is to make sure everything is up to date:

  sudo apt-get update
  sudo apt-get upgrade

Now that everything is up to date, we can install the needed kde4 packages   (kdelibs4, kdebase4, kdepimlibs4) and all of his
  dependencies (qt4...):
  
  sudo apt-get install kde-standard libqt4-dev libqt4-core libqt4-gui 

  While kde is installed, it will prompt you to either choose LightDM or KDE. Being that we already have LXDE, we can choose LightDM since it has less resouces to install.

Once you have KDE, and QT4 installed, we can install mysql:

  sudo apt-get install mysql-client mysql-server
  
Now we need to install everything else thatâ€™s needed for the compile:

  sudo apt-get install build-essential g++ cmake gettext libqt4-sql-mysql kdelibs5-dev
 
 The next step is to download the source:
  cd ~
  git clone https://github.com/hiramvillarreal/iotpos
  
Move into the newly created directory, and create a 'build' Direcotry and move into it:

  cd iotpos 
  mkdir build
  cd build

Run CMake with your path to KDE4:

  cmake .. -DCMAKE_INSTALL_PREFIX=`kde4-config --prefix`
  
Run make to compile lemonpos. This took about an hour on the Pi A, A+, B and B+, took 15 minutes on the new Pi2:
  
  make
  
After the compile is finished, you will need to install everything:  
  
  sudo make install
  
Now, copy the lemonrc file to your local .kde/share/config directory:
  
  cp iotpos/src/lemonrc /home/pi/.kde/share/config/  #Replace USER with your username.
  
After installation, you need to create a database and user on mysql, to do this:

  cd iotpos/database_resources
  cat lemon_mysql_real.sql | mysql -u root -p
  cat lemon_mysql.sql | mysql -u root -p
  
  
To start using lemon, type 

  lemon
  
  If for any reason lemon binary is not found, and if your kde4 install path is /opt/kde4 do:
  
  /opt/kde4/bin/lemon
  
 * The default and only user and password is (without quotation marks):
 
   username: "admin"
   password: "linux"

  By default, squeeze has security disabled, this to let you configure squeeze database settings in case
  you have installed the database server at a different computer.
  
SERIAL THERMAL PRINTER INSTALL


Python Libraries; These libraries are required by the thermal printer library and example programs:

sudo apt-get install python-serial python-imaging python-unidecode

This takes a couple of minutes. 

Test the printer with:

  cd iotpos/py-thermal-printer-master
  sudo python printer.py







